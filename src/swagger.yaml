swagger: "2.0"
info:
  title: iwantmyname API
  description: Manage your domain names and DNS records programmatically with our RESTful API.
  version: "1.0.0"

schemes:
  - https
host: api.iwantmyname.com
basePath: /v1
consumes:
  - application/json
produces:
  - application/json


tags:
  - name: Domains
    description: |
      Interact with domain names managed by your account.

  - name: Domain Transfers
    description: |
      Manage your incoming and outgoing domain transfers.

  - name: Domain Contacts
    description: |
      Manage contact information associated with a domain name.

  - name: DNS Records
    description: |
      Manage your domain's DNS records. For these DNS records to be effective,
      your domain must be using our nameservers. Keep in mind that DNS changes
      will be applied immediately, but may not be immediately active due to DNS
      propagation. Please allow a few hours for the changes to take effect.

  - name: One-click Services
    description: |
      Interact with our one-click services marketplace. Services represent a set
      of DNS records to be applied to a domain for use with third-party platforms.
      DNS propagation, as mentioned above, applies here too.

  - name: Account
    description: |
      Manage your account profile and settings.

  - name: Billing & Receipts
    description: |
      Manage your account's billing information and retrieve receipts.

  - name: Domain Search
    description: |
      gTLD and ccTLD availability and special requirements.


paths:

  /domains:
    get:
      description: |
        List all registered domain names.
      tags:
        - Domains
      responses:
        200:
          description: |
            A list of domains
          schema:
            type: array
            items:
              $ref: "#/definitions/Domain"

  /domains/{domain}:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        Get all information associated with the domain.
      tags:
        - Domains
      responses:
        200:
          description: |
            A single domain
          schema:
            $ref: "#/definitions/Domain"
    patch:
      description: |
        Update specific editable details for the domain.
      tags:
        - Domains
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            properties:
              auto_renew:
                $ref: "#/definitions/auto_renew"
              transfer_lock:
                $ref: "#/definitions/transfer_lock"
              mask_contacts:
                $ref: "#/definitions/mask_contacts"
      responses:
        200:
          description: |
            A single domain
          schema:
            $ref: "#/definitions/Domain"

  /domains/{domain}/nameservers:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        List of all of the domain's nameservers.
      tags:
        - Domains
      responses:
        200:
          description: |
            A list of domain nameservers
          schema:
            $ref: "#/definitions/Nameservers"
    put:
      description: |
        Replace domain's nameservers with a new list of nameservers.
      tags:
        - Domains
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Nameservers"
      responses:
        200:
          description: |
            A list of domain nameservers
          schema:
            $ref: "#/definitions/Nameservers"

  /domains/{domain}/pending:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        List all updates initiated on the domain that are still pending at the registry.
      tags:
        - Domains
      responses:
        200:
          description: |
            A list of pending domain updates
          schema:
            $ref: "#/definitions/PendingUpdates"

  /domains/{domain}/contacts:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        List all contacts (owner, admin, tech, billing) associated with the domain.
      tags:
        - Domain Contacts
      responses:
        200:
          description: |
            A list of domain contacts
          schema:
            $ref: "#/definitions/DomainContacts"
    put:
      description: |
        Replace contact information for all contact types at the same time.
      tags:
        - Domain Contacts
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/DomainContacts"
      responses:
        200:
          description: |
            A list of domain contacts
          schema:
            $ref: "#/definitions/DomainContacts"
    patch:
      description: |
        Update specific contact information for all contact types at the same time.
      tags:
        - Domain Contacts
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            # TODO: replace this with a new schema without all the required properties
            $ref: "#/definitions/DomainContacts"
      responses:
        200:
          description: |
            A list of domain contacts
          schema:
            $ref: "#/definitions/DomainContacts"

  /domains/{domain}/contacts/{type}:
    parameters:
      - $ref: "#/parameters/domain"
      - $ref: "#/parameters/contact_type"
    get:
      description: |
        Show contact information for a specified contact type on the domain. Contact types include the domain owner/registrant (owner), administrative contact (admin), technical contact (tech), or billing contact (billing).
      tags:
        - Domain Contacts
      responses:
        200:
          description: |
            A domain contact
          schema:
            $ref: "#/definitions/Contact"
    put:
      description: |
        Replace contact information for a specific contact type.
      tags:
        - Domain Contacts
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        200:
          description: |
            A domain contact
          schema:
            $ref: "#/definitions/Contact"
    patch:
      description: |
        Update specific contact information for a specific contact type.
      tags:
        - Domain Contacts
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            # TODO: replace this with a new schema without all the required properties
            $ref: "#/definitions/Contact"
      responses:
        200:
          description: |
            A domain contact
          schema:
            $ref: "#/definitions/Contact"

  /domains/{domain}/records:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        List all DNS records for the domain.
      tags:
        - DNS Records
      responses:
        200:
          description: |
            A list of DNS records
          schema:
            allOf:
              - $ref: "#/definitions/DomainRecords"
              - type: array
                items:
                  required:
                    - id
    post:
      description: |
        Add a DNS record to the domain.
      tags:
        - DNS Records
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Record"
      responses:
        201:
          description: |
            A DNS record
          schema:
            allOf:
              - $ref: "#/definitions/DomainRecord"
              - required:
                  - id
    put:
      description: |
        Replace all DNS records for a domain with a new set of records. This is effectively DELETE on each exisiting record and POST for each new record.
      tags:
        - DNS Records
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Records"
      responses:
        200:
          description: |
            A list of DNS records
          schema:
            allOf:
              - $ref: "#/definitions/DomainRecords"
              - type: array
                items:
                  required:
                    - id

  /domains/{domain}/records/{id}:
    parameters:
      - $ref: "#/parameters/domain"
      - $ref: "#/parameters/id"
    delete:
      description: |
        Remove a specific DNS record from a domain.
      tags:
        - DNS Records
      responses:
        204:
          description: |
            The DNS record was removed from the domain.

  /domains/{domain}/zone:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        Show the domain's DNS record as a BIND-compatible zone file.
      tags:
        - DNS Records
      produces:
        - text/plain
      responses:
        200:
          description: |
            A domain's zone file
          # TODO: define schema?
    put:
      description: |
        Replace the domain's DNS records using a BIND-compatible zone file.
      tags:
        - DNS Records
      consumes:
        - text/plain
      produces:
        - text/plain
      parameters:
        - name: payload
          in: body
          required: true
          # TODO: schema is required here, but doesn't really fit a text/plain response type... find alternatives?
          schema:
            type: string
      responses:
        200:
          description: |
            A domain's zone file
          # TODO: define schema?

  /domains/{domain}/services:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        List all one-click services installed to the domain.
      tags:
        - One-click Services
      responses:
        200:
          description: |
            A list of domain's services
          schema:
            type: array
            items:
              $ref: "#/definitions/DomainService"
    post:
      description: |
        Install a service to the domain by adding necessary DNS records and, for some services, web forwarding.
      tags:
        - One-click Services
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                $ref: "#/definitions/service"
            required:
              - name
      responses:
        201:
          description: |
            A domain service
          schema:
            $ref: "#/definitions/DomainService"

  /domains/{domain}/services/{id}:
    parameters:
      - $ref: "#/parameters/domain"
      - $ref: "#/parameters/id"
    delete:
      description: |
        Remove all DNS records related to a service installed to the domain.
      tags:
        - One-click Services
      responses:
        204:
          description: |
            The service was removed from the domain.

  /transfers:
    get:
      description: |
        List all pending incoming and outgoing domain transfers.
      tags:
        - Domain Transfers
      responses:
        200:
          description: |
            A list of domain transfers
          schema:
            type: array
            items:
              $ref: "#/definitions/Transfer"

  /transfers/{domain}:
    parameters:
      - $ref: "#/parameters/domain"
    put:
      description: |
        Restart the domain's pending transfer using a new authorization code.
      tags:
        - Domain Transfers
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            type: object
            properties:
              transfer_code:
                $ref: "#/definitions/transfer_code"
            required:
              - transfer_code
      responses:
        200:
          description: |
            A domain transfer
          schema:
            $ref: "#/definitions/Transfer"

  /services:
    get:
      description: |
        List all available one-click services.
      tags:
        - One-click Services
      responses:
        200:
          description: |
            List of services
          schema:
            type: array
            items:
              $ref: "#/definitions/Service"

  /services/{service}:
    parameters:
      - $ref: "#/parameters/service"
    get:
      description: |
        Show details related to the service including a description and DNS records to be added.
      tags:
        - One-click Services
      responses:
        200:
          description: |
            A service
          schema:
            $ref: "#/definitions/Service"

  /account:
    get:
      description: |
        Get all details related to your iwantmyname account.
      tags:
        - Account
      responses:
        200:
          description: |
            Your account
          schema:
            allOf:
              - $ref: "#/definitions/Account"
              - type: object
                required:
                  - username
                  - default_contact
                  - default_nameservers
                  - default_billing
    patch:
      description: |
        Update specific details for your account.
      tags:
        - Account
      parameters:
        - name: payload
          in: body
          required: true
          # TODO: schema without required fields
          schema:
            $ref: "#/definitions/Account"
      responses:
        200:
          description: |
            Your account
          schema:
            # TODO: move this (and above one) into its own schema $ref
            allOf:
              - $ref: "#/definitions/Account"
              - type: object
                required:
                  - username
                  - default_contact
                  - default_nameservers
                  - default_billing

  /account/contacts/default:
    get:
      description: |
        Show default contact information used for new domain registrations.
      tags:
        - Account
      responses:
        200:
          description:
            Your default domain contact
          schema:
            $ref: "#/definitions/Contact"
    put:
      description: |
        Replace current default contact with a new set of contact information.
      tags:
        - Account
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        200:
          description:
            Your default domain contact
          schema:
            $ref: "#/definitions/Contact"
    patch:
      description: |
        Update specific information for your default contact.
      tags:
        - Account
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        200:
          description:
            Your default domain contact
          schema:
            $ref: "#/definitions/Contact"

  /account/nameservers/default:
    get:
      description: |
        List of default nameservers used for new domain registrations.
      tags:
        - Account
      responses:
        200:
          description: |
            Your default list of nameservers
          schema:
            $ref: "#/definitions/Nameservers"
    put:
      description: |
        Replace default nameservers with a new list of nameservers.
      tags:
        - Account
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/Nameservers"
      responses:
        200:
          description: |
            Your default list of nameservers
          schema:
            $ref: "#/definitions/Nameservers"

  /account/billing/default:
    get:
      description: |
        Show the current billing details associated with your account. Your account will need an active set of billing details in order to process domain registrations and renewals.
      tags:
        - Billing & Receipts
      responses:
        200:
          description: |
            Your default billing profile
          schema:
            $ref: "#/definitions/BillingProfile"
    put:
      description: |
        Replace your account's current billing details with new billing details. This will trigger a small authorization charge to validate your new billing details. This authorization charge will be automatically refunded.
      tags:
        - Billing & Receipts
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: "#/definitions/NewBillingProfile"
      responses:
        200:
          description: |
            Your default billing profile
          schema:
            $ref: "#/definitions/BillingProfile"

    delete:
      description: |
        Remove the current billing details from your account.
      tags:
        - Billing & Receipts
      responses:
        204:
          description: |
            Your default billing profile was removed.

  /account/receipts:
    get:
      description: |
        List all receipts related to your account.
      tags:
        - Billing & Receipts
      responses:
        200:
          description: |
            A list of receipts
          schema:
            type: array
            items:
              $ref: "#/definitions/Receipt"

  /account/receipts/{id}:
    parameters:
      - $ref: "#/parameters/id"
    get:
      description: |
        Get all information associated with a specific receipt on your account.
      tags:
        - Billing & Receipts
      responses:
        200:
          description: |
            A receipt
          schema:
            $ref: "#/definitions/Receipt"

  /products:
    get:
      description: |
        List of our products and their prices by currency.
      tags:
        - Domain Search
      responses:
        200:
          description: |
            A list of products
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"

  /products/{product}:
    parameters:
      - $ref: "#/parameters/product"
    get:
      description: |
        Show a specific product and its prices by currency.
      tags:
        - Domain Search
      responses:
        200:
          description: |
            A product
          schema:
            $ref: "#/definitions/Product"

  /tlds:
    get:
      # TODO: return unsupported TLDs as well
      description: |
        List of our supported TLDs and any TLD-specific notes or registration requirements.
      tags:
        - Domain Search
      responses:
        200:
          description: |
            A list of TLDs
          schema:
            type: array
            items:
              $ref: "#/definitions/TLD"

  /tlds/{tld}:
    parameters:
      - $ref: "#/parameters/tld"
    get:
      description: |
        Show TLD-specific registration information.
      tags:
        - Domain Search
      responses:
        200:
          description: |
            A TLD
          schema:
            $ref: "#/definitions/TLD"

  /search/results:
    get:
      description: |
        Generate personalized results for your domain search query.
      tags:
        - Domain Search
      responses:
        200:
          description: |
            A list of domain names
          schema:
            $ref: "#/definitions/SearchResults"

  /search/results/{domain}:
    parameters:
      - $ref: "#/parameters/domain"
    get:
      description: |
        Check domain availability, price, and any TLD-specific requirements.
      tags:
        - Domain Search
      responses:
        200:
          description: |
            Domain search availability
          schema:
            $ref: "#/definitions/SearchResult"


parameters:
  domain:
    name: domain
    in: path
    required: true
    type: string
    format: hostname
  contact_type:
    name: type
    in: path
    required: true
    type: string
    enum:
      - owner
      - admin
      - billing
      - tech
  id:
    name: id
    in: path
    required: true
    type: string
    format: uuid
  service:
    name: service
    in: path
    required: true
    type: string
  product:
    name: product
    in: path
    required: true
    type: string
  tld:
    name: tld
    in: path
    required: true
    type: string


definitions:
  id:
    type: string
    format: uuid
    readonly: true
  created_at:
    type: string
    format: date-time
    readOnly: true
  updated_at:
    type: string
    format: date-time
    readOnly: true
  expires_at:
    type: string
    format: date-time
    readOnly: true
  renews_at:
    type: string
    format: date-time
    readOnly: true
  domain:
    type: string
    format: hostname
    readOnly: true
  domain_utf8:
    type: string
    format: hostname
    readOnly: true
  auto_renew:
    type: boolean
  transfer_lock:
    type: boolean
  mask_contacts:
    type: boolean
  nameserver:
    type: string
    format: hostname
  first_name:
    type: string
  last_name:
    type: string
  company:
    type: string
  country:
    type: string
  street:
    type: string
  city:
    type: string
  state:
    type: string
  postcode:
    type: string
  phone:
    type: string
  email:
    type: string
    format: email
  service:
    type: string
  record_name:
    type: string
  record_type:
    # TODO: define enum of record types
    type: string
  record_value:
    type: string
  transfer_type:
    enum:
      - incoming
      - outgoing
  transfer_status:
    enum:
      - initiated
      - pending
      - completed
      # TODO: more transfer status types?
  transfer_code:
    type: string
  username:
    type: string
    format: email
  billing_name:
    type: string
  exp_month:
    type: integer
    minimum: 1
    maximum: 12
  exp_year:
    type: integer
    minimum: 2015
    maximum: 2035

  Domain:
    properties:
      domain:
        $ref: "#/definitions/domain"
      domain_utf8:
        $ref: "#/definitions/domain_utf8"
      created_at:
        $ref: "#/definitions/created_at"
      updated_at:
        $ref: "#/definitions/updated_at"
      expires_at:
        $ref: "#/definitions/expires_at"
      renews_at:
        $ref: "#/definitions/renews_at"
      auto_renew:
        $ref: "#/definitions/auto_renew"
      transfer_lock:
        $ref: "#/definitions/transfer_lock"
      mask_contacts:
        $ref: "#/definitions/mask_contacts"
    required:
      - domain
      - domain_utf8
      - created_at
      - updated_at
      - expires_at
      - renews_at
      - auto_renew
      - transfer_lock
      - mask_contacts

  Nameservers:
    type: array
    items:
      $ref: "#/definitions/nameserver"
    minItems: 2
    maxItems: 5
    uniqueItems: true

  PendingUpdates:
    type: array
    items:
      type: object
      properties:
        created_at:
          $ref: "#/definitions/created_at"
        payload:
          # TODO: define payload based on domain PATCH/PUT payloads above
          type: object
      required:
        - created_at
        - payload

  Contact:
    properties:
      first_name:
        $ref: "#/definitions/first_name"
      last_name:
        $ref: "#/definitions/last_name"
      company:
        $ref: "#/definitions/company"
      country:
        $ref: "#/definitions/country"
      street:
        $ref: "#/definitions/street"
      city:
        $ref: "#/definitions/city"
      state:
        $ref: "#/definitions/state"
      postcode:
        $ref: "#/definitions/postcode"
      phone:
        $ref: "#/definitions/phone"
      email:
        $ref: "#/definitions/email"
    required:
      - first_name
      - last_name
      - country
      - street
      - city
      - postcode
      - phone
      - email

  DomainContacts:
    properties:
      owner:
        $ref: "#/definitions/Contact"
      admin:
        $ref: "#/definitions/Contact"
      tech:
        $ref: "#/definitions/Contact"
      billing:
        $ref: "#/definitions/Contact"
    required:
      - owner
      - admin
      - tech
      - billing

  Record:
    properties:
      name:
        $ref: "#/definitions/record_name"
      type:
        $ref: "#/definitions/record_type"
      value:
        $ref: "#/definitions/record_value"
    required:
      - name
      - type
      - value

  Records:
    type: array
    items:
      $ref: "#/definitions/Record"

  DomainRecord:
    allOf:
      - $ref: "#/definitions/Record"
      - type: object
        properties:
          id:
            $ref: "#/definitions/id"
          service:
            $ref: "#/definitions/service"

  DomainRecords:
    type: array
    items:
      $ref: "#/definitions/DomainRecord"

  Service:
    properties:
      service:
        $ref: "#/definitions/service"
      name:
        type: string
      description:
        type: string
      records:
        $ref: "#/definitions/Records"
    required:
      - service
      - name
      - description
      - records

  DomainService:
    allOf:
      - $ref: "#/definitions/Service"
      - type: object
        properties:
          id:
            $ref: "#/definitions/id"
        required:
          - id

  Transfer:
    properties:
      type:
        $ref: "#/definitions/transfer_type"
      domain:
        $ref: "#/definitions/domain"
      domain_utf8:
        $ref: "#/definitions/domain_utf8"
      status:
        $ref: "#/definitions/transfer_status"
      transfer_code:
        $ref: "#/definitions/transfer_code"
      created_at:
        $ref: "#/definitions/created_at"
      updated_at:
        $ref: "#/definitions/updated_at"
      log:
        type: array
        items:
          type: object
          properties:
            created_at:
              $ref: "#/definitions/created_at"
            status:
              $ref: "#/definitions/transfer_status"
            message:
              type: string
          required:
            - created_at
            - status
            - message
    required:
      - type
      - domain
      - domain_utf8
      - status
      - transfer_code
      - created_at
      - updated_at
      - log

  Account:
    properties:
      username:
        $ref: "#/definitions/username"
      default_contact:
        $ref: "#/definitions/Contact"
      default_nameservers:
        $ref: "#/definitions/Nameservers"
      default_billing:
        $ref: "#/definitions/BillingProfile"

  BillingProfile:
    properties:
      last4:
        type: string
        pattern: "^[0-9]{4}$"
      name:
        $ref: "#/definitions/billing_name"
      exp_month:
        $ref: "#/definitions/exp_month"
      exp_year:
        $ref: "#/definitions/exp_year"
    required:
      - last4
      - name
      - exp_month
      - exp_year

  NewBillingProfile:
    properties:
      number:
        type: string
      name:
        $ref: "#/definitions/billing_name"
      exp_month:
        $ref: "#/definitions/exp_month"
      exp_year:
        $ref: "#/definitions/exp_year"
      security_code:
        type: string
    required:
      - number
      - name
      - exp_month
      - exp_year
      - security_code

  Receipt:
    properties:
      id:
        $ref: "#/definitions/id"
      currency:
        type: string
      subtotal:
        type: number
      total:
        type: number
      items:
        type: array
        items:
          type: object
          properties:
            product:
              type: string
            type:
              type: string
            quantity:
              type: integer
            amount:
              type: number
          required:
            - product
            - type
            - quantity
            - amount
      download_url:
        type: string
        format: uri
    required:
      - id
      - currency
      - subtotal
      - total
      - items
      - download_url

  Product:
    properties:
      product:
        type: string
      type:
        type: string
      price:
        type: object
        # TODO: define price/currency object
    required:
      - product
      - type
      - price

  TLD:
    properties:
      tld:
        type: string
      tld_utf8:
        type: string
      description:
        type: string
      image_url:
        type: string
        format: uri
      can_transfer_lock:
        type: boolean
      can_mask_contacts:
        type: boolean
      product_url:
        type: string
        format: uri
    required:
      - tld
      - tld_utf8
      - description
      - image_url
      - can_transfer_lock
      - can_mask_contacts
      - product_url

  SearchResults:
    type: array
    items:
      type: object
      properties:
        domain:
          $ref: "#/definitions/domain"
        domain_utf8:
          $ref: "#/definitions/domain_utf8"
      required:
        - domain
        - domain_utf8

  SearchResult:
    properties:
      domain:
        $ref: "#/definitions/domain"
      domain_utf8:
        $ref: "#/definitions/domain_utf8"
      available:
        type: boolean
      price:
        # TODO: price object
        type: object
      caveats:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            reason:
              type: string
          required:
            - type
            - reason
    required:
      - domain
      - domain_utf8
